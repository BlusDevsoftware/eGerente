/**
 * Script de verifica칞칚o for칞ada de autentica칞칚o
 * Executa imediatamente para garantir prote칞칚o
 */

(function() {
    'use strict';
    
    console.log('游댏 Iniciando verifica칞칚o for칞ada de autentica칞칚o...');
    
    // Fun칞칚o para verificar se 칠 uma p치gina protegida
    function isProtectedPage() {
        const currentPath = window.location.pathname;
        const currentPage = currentPath.split('/').pop();
        
        console.log('游댏 P치gina atual:', currentPath, '| Arquivo:', currentPage);
        
        // P치ginas p칰blicas (n칚o precisam de autentica칞칚o)
        const publicPages = [
            'login.html',
            'index.html' // P치gina principal de redirecionamento
        ];
        
        // Se estiver na raiz ou em index.html principal, n칚o 칠 protegida
        if (currentPath === '/' || currentPath === '/index.html' || currentPage === 'index.html') {
            console.log('游댏 P치gina p칰blica (raiz/index principal)');
            return false;
        }
        
        // Se cont칠m 'src/' na URL, 칠 uma p치gina protegida
        if (currentPath.includes('/src/')) {
            console.log('游댏 P치gina protegida (cont칠m /src/)');
            return true;
        }
        
        // Verificar se n칚o 칠 uma p치gina p칰blica
        const isPublic = publicPages.includes(currentPage);
        console.log('游댏 칄 p치gina p칰blica?', isPublic);
        
        return !isPublic;
    }
    
    // Fun칞칚o para verificar autentica칞칚o
    function checkAuth() {
        const token = localStorage.getItem('token');
        const user = localStorage.getItem('user');
        
        console.log('游댏 Token existe?', !!token);
        console.log('游댏 User existe?', !!user);
        
        if (!token || !user) {
            console.log('游댏 Usu치rio n칚o autenticado');
            return false;
        }
        
        try {
            const userData = JSON.parse(user);
            const hasEmail = userData && userData.email;
            console.log('游댏 Dados do usu치rio v치lidos?', hasEmail);
            return hasEmail;
        } catch (error) {
            console.error('游댏 Erro ao verificar dados do usu치rio:', error);
            return false;
        }
    }
    
    // Fun칞칚o para redirecionar para login
    function redirectToLogin() {
        console.log('游댏 Redirecionando para login...');
        
        // Salvar p치gina atual para redirecionar ap칩s login
        const currentPage = window.location.pathname;
        if (currentPage !== '/src/login.html' && !currentPage.includes('login.html')) {
            sessionStorage.setItem('redirectAfterLogin', currentPage);
            console.log('游댏 P치gina salva para redirecionamento:', currentPage);
        }
        
        // Redirecionar para login
        window.location.href = 'src/login.html';
    }
    
    // Executar verifica칞칚o imediatamente
    if (isProtectedPage()) {
        console.log('游댏 P치gina protegida detectada, verificando autentica칞칚o...');
        
        if (!checkAuth()) {
            console.log('游댏 Usu치rio n칚o autenticado, redirecionando...');
            redirectToLogin();
        } else {
            console.log('游댏 Usu치rio autenticado, permitindo acesso');
        }
    } else {
        console.log('游댏 P치gina p칰blica, n칚o precisa de autentica칞칚o');
    }
    
})();
